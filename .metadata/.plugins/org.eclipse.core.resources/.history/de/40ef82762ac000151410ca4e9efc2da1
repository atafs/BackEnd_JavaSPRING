package aspect;

import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;

@Aspect
public class LoggingAspect {
	
	//WILDCARDS: any return type, starts with get:
	// * = one args; .. = zero or more args
	@Before("execution(public * get*(..))")
	public void LoggingAdvice() {
		System.out.println("ADVICE RUN WILDCARD... GET METHOD CALLED!!");
	}
	
//	@Before("execution(public String getName())")
//	public void LoggingAdvice() {
//		System.out.println("ADVICE RUN CIRCLE... GET METHOD CALLED!!");
//	}
	
	/* OR ############################################ */
	
//	@Before("execution(public String model.Circle.getName())")
//	public void LoggingAdviceCir() {
//		System.out.println("ADVICE RUN CIRCLE... GET METHOD CALLED!!");
//	}
//	
//	@Before("execution(public String model.Triangle.getName())")
//	public void LoggingAdviceTri() {
//		System.out.println("ADVICE RUN TRIANGLE... GET METHOD CALLED!!");
//	}

}
